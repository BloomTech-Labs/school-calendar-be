openapi: "3.0.0"
info:
  title: "Makata Calendar API"
  description: "This is an API service for a calendar application"
  version: 1.0.0
schemes:
  - "https"
servers:
  - url: "https://lab17-makata.herokuapp.com/"
tags:
  - name: "Authentication"
    description: "User registration and log in"
  - name: "Calendar"
    description: "Handling all calendar operations"
  - name: "Event"
    description: "Handling all event operations"

paths:
  /auth/register:
    post:
      tags:
        - "Authentication"
      summary: "Register a new user"
      operationId: "register"
      parameters:
        - in: "body"
          required: true
          schema:
            $ref: "#/components/schemas/NewUser"
      responses:
        "200":
          description: "User is successfully registered"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticatedUser"
  /auth/login:
    post:
      tags:
        - Authentication
      summary: "Login a user"
      description: "UserId is a username or an email"
      operationId: "login"
      parameters:
        - in: "body"
          required: true
          schema:
            $ref: "#/components/schemas/RegisteredUser"
      responses:
        "200":
          description: "User is succesfully login"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticatedUser"
  /api/users/calendars:
    get:
      tags:
        - Calendar
      summary: "Get all calendars under a user (owned and subscribed calendars)"
      operationId: "getAllCalendars"
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            $ref: "#/components/schemas/Authorization"
          required: true
      responses:
        "200":
          description: "All calendar succesfully retrieved"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfCalendarsObject"
  /api/calendars/{calendarUuid}/?subscribe=true:
    put:
      tags:
        - Calendar
      summary: "Subscribe to a calendar"
      operationId: "subscribeCalendar"
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            $ref: "#/components/schemas/Authorization"
          required: true
        - in: path
          name: calendarUuid
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "Successfully subscribe to a calendar"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Calendar"
  /api/calendars/{calendarUuid}/?subscribe=false:
    put:
      tags:
        - Calendar
      summary: "Unsubscribe from a calendar"
      operationId: "unsubscribeCalendar"
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            $ref: "#/components/schemas/Authorization"
          required: true
        - in: path
          name: calendarUuid
          schema:
            $ref: "#/components/schemas/CalendarUuid"
          required: true
      responses:
        "200":
          description: "Successfully unsubscribe from a calendar"
          content:
            text/plain:
              schema:
                type: integer
                example: 1
  /api/calendars/{calendarUuid}/events:
    post:
      tags:
        - Event
      summary: "Create an event"
      operationId: "createEvent"
      security:
        - brearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            $ref: "#/components/schemas/Authorization"
          required: true
        - name: calendarUuid
          in: path
          schema:
            $ref: "#/components/schemas/CalendarUuid"
          required: true
      requestBody:
        description: "event content"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewEventRequest"
      responses:
        "200":
          description: "event created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewEventResponse"
    get:
      tags:
        - Event
      summary: "Get all events from a calendar"
      operationId: "getCalendarEvents"
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            $ref: "#/components/schemas/Authorization"
          required: true
        - name: calendarUuid
          in: path
          schema:
            $ref: "#/components/schemas/CalendarUuid"
          required: true
      responses:
        "200":
          description: "events retrieved successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarEventsResponse"

  /api/events/{eventUuid}:
    put:
      tags:
        - Event
      summary: "Update an event"
      operationId: "updateEvent"
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            $ref: "#/components/schemas/Authorization"
          required: true
        - name: eventUuid
          in: path
          schema:
            type: string
            example: "b42985c0-0982-11ea-b267-e9f8fc37f9bf"
          required: true
      requestBody:
        description: "event changes"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewEventRequest"
      responses:
        "200":
          description: "event changed"
          content:
            application/json:
              schema:
                $ref: "#components/schemas/NewEventResponse"
    delete:
      tags:
        - Event
      summary: "Delete an event"
      operationId: "deleteEvent"
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            $ref: "#/components/schemas/Authorization"
          required: true
        - name: eventUuid
          in: path
          schema:
            type: string
            example: "b42985c0-0982-11ea-b267-e9f8fc37f9bf"
          required: true
      responses:
        "200":
          description: "event deleted"
          content:
            text/plain:
              schema:
                type: integer
                example: 1

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    NewEventRequest:
      type: object
      properties:
        eventTitle:
          type: string
        eventNote:
          type: string
        eventLocation:
          type: string
        startDate:
          type: string
          example: "2019-11-20"
        endDate:
          type: string
          example: "2019-11-20"
        startTime:
          type: string
          example: "2019-11-17T10:00:00.000-08:00"
        endTime:
          type: string
          example: "2019-11-17T11:15:00.000-08:00"
        isAllDayEvent:
          type: boolean
        isRepeatingEvent:
          type: boolean
    NewEventResponse:
      type: object
      properties:
        eventTitle:
          type: string
        eventNote:
          type: string
        eventLocation:
          type: string
        startDate:
          type: string
          example: "2019-11-20"
        endDate:
          type: string
          example: "2019-11-20"
        startTime:
          type: string
          example: "2019-11-17T10:00:00.000-08:00"
        endTime:
          type: string
          example: "2019-11-17T11:15:00.000-08:00"
        isAllDayEvent:
          type: integer
          example: "0 or 1"
        isRepeatingEvent:
          type: integer
          example: "0 or 1"
        isPrivate:
          type: integer
        eventColor:
          type: string
          example: "#1A73E8"
        uuid:
          type: string
    Authorization:
      type: string
      format: uuid
      example: "Bearer ey123..."
    CalendarUuid:
      type: string
      example: "42cc9590-0b29-11ea-8074-439d6d31ead7"
    NewUser:
      type: "object"
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
    AuthenticatedUser:
      type: "object"
      properties:
        profile:
          type: "object"
          properties:
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
        accessToken:
          type: string
          example: "eyh123..."
    RegisteredUser:
      type: "object"
      properties:
        userId:
          type: string
        password:
          type: string
    Calendar:
      type: object
      properties:
        calendarName:
          type: string
          example: "Lambda"
        calendarDescription:
          type: string
          example: "Group Calendar"
        calendarColor:
          type: string
          example: "#A35629"
        isPrivate:
          type: integer
          example: "1"
        isDefault:
          type: integer
          example: "1"
        isOwner:
          type: integer
          example: "0"
        uuid:
          type: string
    ArrayOfCalendarsObject:
      type: object
      properties:
        calendars:
          type: array
          items:
            type: object
            properties:
              calendarName:
                type: string
              calendarDescription:
                type: string
              calendarColor:
                type: string
                example: "#A35629"
              isPrivate:
                type: integer
                example: "1"
              isDefault:
                type: integer
                example: "1"
              isOwner:
                type: integer
                example: "1"
              uuid:
                type: string
    CalendarEventsResponse:
      type: object
      properties:
        calendarUuid:
          type: string
          example: 1702eed0-0d7e-11ea-925a-23f8af4c54e4
        events:
          type: array
          items:
            type: object
            properties:
              eventTitle:
                type: string
              eventNote:
                type: string
              eventLocation:
                type: string
              startDate:
                type: string
                example: "2019-11-20"
              endDate:
                type: string
                example: "2019-11-20"
              startTime:
                type: string
                example: "2019-11-17T10:00:00.000-08:00"
              endTime:
                type: string
                example: "2019-11-17T11:15:00.000-08:00"
              isAllDayEvent:
                type: integer
                example: "0 or 1"
              isRepeatingEvent:
                type: integer
                example: "0 or 1"
              isPrivate:
                type: integer
              eventColor:
                type: string
                example: "#1A73E8"
              uuid:
                type: string
